name: Build on Tag

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  lint:
    name: Lint files
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          skip-cache: true
          args: --timeout=30m

  test:
    name: Run tests
    runs-on: 'ubuntu-22.04'
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
      - run: go test -v -cover ./...

  security-checks:
    runs-on: ubuntu-22.04
    needs: test
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Build Baski Image
        uses: eschercloudai/container-security-action@v0.0.4
        if: github.event_name != 'pull_request'
        id: build-and-scan-baski
        with:
          image-repo: ghcr.io
          repo-username: ${{ github.repository_owner }}
          repo-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: baski
          image-tag: ${{ github.ref_name }}
          check-severity: CRITICAL
          trivyignore-from-s3: true
          aws-endpoint: "https://nl1.eschercloud.com:6780"
          aws-access-key: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-key: ${{secrets.AWS_SECRET_KEY}}
          s3-bucket: "trivyignores"
          s3-path: "baski"
          add-latest-tag: true
          publish-image: true
          cosign-private-key: ${{secrets.COSIGN_KEY}}
          cosign-password: ${{secrets.COSIGN_PASSWORD}}
          cosign-tlog: false
          dockerfile-path: docker/baski
      - name: Build Baski Server Image
        uses: eschercloudai/container-security-action@v0.0.4
        if: github.event_name != 'pull_request'
        id: build-and-scan-server
        with:
          image-repo: ghcr.io
          repo-username: ${{ github.repository_owner }}
          repo-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: baski-server
          image-tag: ${{ github.ref_name }}
          check-severity: CRITICAL
          trivyignore-from-s3: true
          aws-endpoint: "https://nl1.eschercloud.com:6780"
          aws-access-key: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-key: ${{secrets.AWS_SECRET_KEY}}
          s3-bucket: "trivyignores"
          s3-path: "baski-server"
          add-latest-tag: true
          publish-image: true
          cosign-private-key: ${{secrets.COSIGN_KEY}}
          cosign-password: ${{secrets.COSIGN_PASSWORD}}
          cosign-tlog: false
          dockerfile-path: docker/server

  package-and-push-charts:
    runs-on: ubuntu-22.04
    needs: security-checks
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        id: install-helm

      - name: Push Chart to Harbor
        shell: bash
        run: |
          helm registry login -u ${{ secrets.HELM_USER }} -p ${{ secrets.HELM_PASSWORD }} https://harbor.infra.nl1.eschercloud.dev
          
          # Release the baski-server chart
          helm package charts/baski-server --version ${{ github.ref_name }} --app-version ${{ github.ref_name }}
          helm push baski-server-${{ github.ref_name }}.tgz oci://harbor.infra.nl1.eschercloud.dev/charts
